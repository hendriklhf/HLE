using System;
using System.Collections.Frozen;
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics.Contracts;

namespace HLE.Text;

/// <summary>
/// A class that contains (almost) all existing emojis.
/// </summary>
/// <remarks>
/// Members are generated by a source generator.
/// </remarks>
public static partial class Emoji
{
    public static ImmutableArray<string> All => AllEmojis.Items;

#pragma warning disable S3459 // the properties are not unassigned
    private static partial FrozenDictionary<string, string> EmojisByName { get; }

    private static partial FrozenSet<string> AllEmojis { get; }
#pragma warning restore S3459

    public static bool TryGetEmoji(string name, [MaybeNullWhen(false)] out string emoji)
        => EmojisByName.TryGetValue(name, out emoji);

    [Pure]
    public static bool IsEmoji(string text) => AllEmojis.Contains(text);

    [Pure]
    public static bool IsEmoji(ref PooledInterpolatedStringHandler text)
    {
        bool result = IsEmoji(text.Text);
        text.Dispose();
        return result;
    }

    [Pure]
    public static bool IsEmoji(ReadOnlySpan<char> text)
    {
        FrozenSet<string>.AlternateLookup<ReadOnlySpan<char>> lookup = AllEmojis.GetAlternateLookup<ReadOnlySpan<char>>();
        return lookup.Contains(text);
    }
}
